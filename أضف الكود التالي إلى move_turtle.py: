#!/usr/bin/env python3
import rospy
from geometry_msgs.msg import Twist

def move_turtle():
    # Initialize the ROS node
    rospy.init_node('move_turtle', anonymous=True)
    # Create a publisher to the /turtle1/cmd_vel topic
    velocity_publisher = rospy.Publisher('/turtle1/cmd_vel', Twist, queue_size=10)
    # Set the loop rate
    rate = rospy.Rate(10) # 10hz

    # Create a Twist message and set linear and angular velocities
    vel_msg = Twist()
    vel_msg.linear.x = 2.0 # Move forward with a speed of 2.0
    vel_msg.angular.z = 1.0 # Rotate with a speed of 1.0

    while not rospy.is_shutdown():
        # Publish the velocity
        velocity_publisher.publish(vel_msg)
        # Log info
        rospy.loginfo("Moving the turtle")
        # Sleep to maintain the loop rate
        rate.sleep()

if __name__ == '__main__':
    try:
        move_turtle()
    except rospy.ROSInterruptException:
        pass
